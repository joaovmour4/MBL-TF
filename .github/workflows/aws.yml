name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

env:
  ECR_IMAGE: ${{ vars.ECR_IMAGE }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx inspect
          docker buildx build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_BACKEND_IMAGE:latest --push .

      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: ecs update-service --cluster ervas-detector --service ervas-detector --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

      # - name: Set up SSH
      #   uses: webfactory/ssh-agent@v0.5.3
      #   with:
      #     ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # - name: Copy files to EC2
      #   run: |
      #     echo "${{ secrets.EC2_SSH_KEY }}" > private_key && chmod 600 private_key
      #     scp -i private_key -r -o StrictHostKeyChecking=no . ec2-user@ec2-15-228-247-16.sa-east-1.compute.amazonaws.com:/home/ec2-user/app

      # - name: SSH into EC2 and deploy
      #   run: |
      #     ssh -i private_key -o StrictHostKeyChecking=no ec2-user@ec2-15-228-247-16.sa-east-1.compute.amazonaws.com << 'EOF'
      #       cd /home/ec2-user/app
      #       docker-compose down
      #       docker-compose up --build -d
      #     EOF
